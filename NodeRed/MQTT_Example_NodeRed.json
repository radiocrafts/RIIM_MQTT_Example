[
    {
        "id": "5f47d683875ae76f",
        "type": "tab",
        "label": "MQTT Example",
        "disabled": false,
        "info": ""
    },
    {
        "id": "bc5418199f775b20",
        "type": "coap in",
        "z": "5f47d683875ae76f",
        "method": "PUT",
        "name": "",
        "server": "4f40af23.8f5648",
        "url": "/CommData",
        "x": 150,
        "y": 180,
        "wires": [
            [
                "c156a34cf82bc89a"
            ]
        ]
    },
    {
        "id": "618e22f518c2d5cb",
        "type": "debug",
        "z": "5f47d683875ae76f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 180,
        "wires": []
    },
    {
        "id": "c156a34cf82bc89a",
        "type": "function",
        "z": "5f47d683875ae76f",
        "name": "",
        "func": "function ArrayToIPv6String (payload) {\n    DestAddr=\"\"\n    for(let i=0;i<16;i+=2){\n        DestAddr += payload[i].toString(16).length < 2 ? \"0\" + payload[i].toString(16) : payload[i].toString(16)\n        DestAddr += payload[i+1].toString(16).length < 2 ? \"0\" + payload[i+1].toString(16) : payload[i+1].toString(16)\n        if(i<14){\n            DestAddr += \":\"\n        }\n    }\n    return DestAddr\n}\n\nNodeAddr=msg.req.payload\nNodeAddr_Str=ArrayToIPv6String(NodeAddr)\n\nconsole.log(\"COMMISIONING:\\nWe got address from node:\" + NodeAddr_Str)\nconsole.log(\"Sending response back to node.\")\n\n// Send response:\nmsg.res.end(\"{\\\"Res\\\":\\\"Registered\\\"}\")\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 180,
        "wires": [
            [
                "618e22f518c2d5cb"
            ]
        ]
    },
    {
        "id": "457738d59c0b1060",
        "type": "coap in",
        "z": "5f47d683875ae76f",
        "method": "PUT",
        "name": "",
        "server": "4f40af23.8f5648",
        "url": "/ServerData",
        "x": 150,
        "y": 420,
        "wires": [
            [
                "96d571ded804dfec",
                "5f23b69fa11bf953"
            ]
        ]
    },
    {
        "id": "96d571ded804dfec",
        "type": "debug",
        "z": "5f47d683875ae76f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 420,
        "wires": []
    },
    {
        "id": "5f23b69fa11bf953",
        "type": "change",
        "z": "5f47d683875ae76f",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "req._packet.payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 505,
        "wires": [
            [
                "9cbf10fb8c8525c7",
                "2755d853de6d0a6c"
            ]
        ]
    },
    {
        "id": "f3d7331e5c12467b",
        "type": "mqtt out",
        "z": "5f47d683875ae76f",
        "name": "",
        "topic": "sensors/tempBR",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "6dda43af504ec4d0",
        "x": 845,
        "y": 400,
        "wires": []
    },
    {
        "id": "e7e6c91b172e5be2",
        "type": "aedes broker",
        "z": "5f47d683875ae76f",
        "name": "localMQTTBroker",
        "mqtt_port": 1883,
        "mqtt_ws_bind": "port",
        "mqtt_ws_port": "",
        "mqtt_ws_path": "",
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "dburl": "",
        "usetls": false,
        "x": 725,
        "y": 280,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "9cbf10fb8c8525c7",
        "type": "debug",
        "z": "5f47d683875ae76f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 580,
        "wires": []
    },
    {
        "id": "2755d853de6d0a6c",
        "type": "switch",
        "z": "5f47d683875ae76f",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "TempBR",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "TempMR",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 675,
        "y": 455,
        "wires": [
            [
                "f3d7331e5c12467b"
            ],
            [
                "b69a15d0a5cc797e"
            ]
        ],
        "l": false
    },
    {
        "id": "b69a15d0a5cc797e",
        "type": "mqtt out",
        "z": "5f47d683875ae76f",
        "name": "",
        "topic": "sensors/tempMR",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "6dda43af504ec4d0",
        "x": 855,
        "y": 495,
        "wires": []
    },
    {
        "id": "4f40af23.8f5648",
        "type": "coap-server",
        "name": "CoAPServer",
        "port": "5683"
    },
    {
        "id": "6dda43af504ec4d0",
        "type": "mqtt-broker",
        "name": "LocalMQTTBroker",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    }
]
